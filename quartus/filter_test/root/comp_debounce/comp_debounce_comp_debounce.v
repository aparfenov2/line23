// -------------------------------------------------------------
// 
// File Name: hdlsrc\root\comp_debounce\comp_debounce_comp_debounce.v
// Created: 2014-09-19 22:57:54
// 
// Generated by MATLAB 8.3 and HDL Coder 3.4
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: comp_debounce_comp_debounce
// Source Path: comp_debounce
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module comp_debounce_comp_debounce
          (
           clk,
           reset,
           enb,
           flt_in,
           det_out
          );


  input   clk;
  input   reset;
  input   enb;
  input   signed [15:0] flt_in;  // int16
  output  det_out;


  wire signed [16:0] Abs_y;  // sfix17
  wire signed [15:0] Abs_out1;  // int16
  wire signed [15:0] Constant_out1;  // int16
  wire Relational_Operator_relop1;
  wire [31:0] Data_Type_Conversion_out1;  // uint32
  wire [31:0] Sum_out1;  // uint32
  reg [31:0] Unit_Delay_out1;  // uint32
  wire [31:0] Bit_Shift_out1;  // uint32
  wire [31:0] Constant1_out1;  // uint32
  wire Relational_Operator1_relop1;


  assign Abs_y = (flt_in < 16'sb0000000000000000 ?  - ({flt_in[15], flt_in}) :
              {flt_in[15], flt_in});
  assign Abs_out1 = Abs_y[15:0];



  assign Constant_out1 = 16'sd300;



  assign Relational_Operator_relop1 = (Abs_out1 > Constant_out1 ? 1'b1 :
              1'b0);



  assign Data_Type_Conversion_out1 = {31'b0, Relational_Operator_relop1};



  always @(posedge clk or posedge reset)
    begin : Unit_Delay_process
      if (reset == 1'b1) begin
        Unit_Delay_out1 <= 32'b00000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay_out1 <= Sum_out1;
        end
      end
    end



  assign Bit_Shift_out1 = Unit_Delay_out1 <<< 1;



  assign Sum_out1 = Bit_Shift_out1 + Data_Type_Conversion_out1;



  assign Constant1_out1 = 32'd0;



  assign Relational_Operator1_relop1 = (Sum_out1 > Constant1_out1 ? 1'b1 :
              1'b0);



  assign det_out = Relational_Operator1_relop1;

endmodule  // comp_debounce_comp_debounce

