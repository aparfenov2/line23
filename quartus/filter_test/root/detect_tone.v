// -------------------------------------------------------------
// 
// File Name: hdlsrc\root\detect_tone.v
// Created: 2014-09-19 22:57:56
// 
// Generated by MATLAB 8.3 and HDL Coder 3.4
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 2.08333e-05
// Target subsystem base rate: 2.08333e-05
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        2.08333e-05
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// det_out_0                     ce_out        2.08333e-05
// det_out_1                     ce_out        2.08333e-05
// det_out_2                     ce_out        2.08333e-05
// det_out1_0                    ce_out        2.08333e-05
// det_out1_1                    ce_out        2.08333e-05
// det_out1_2                    ce_out        2.08333e-05
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: detect_tone
// Source Path: detect_tone
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module detect_tone
          (
           clk,
           reset,
           clk_enable,
           adc_in,
           ce_out,
           det_out_0,
           det_out_1,
           det_out_2,
           det_out1_0,
           det_out1_1,
           det_out1_2
          );


  input   clk;
  input   reset;
  input   clk_enable;
  input   [11:0] adc_in;  // ufix12
  output  ce_out;
  output  det_out_0;  // boolean
  output  det_out_1;  // boolean
  output  det_out_2;  // boolean
  output  det_out1_0;  // boolean
  output  det_out1_1;  // boolean
  output  det_out1_2;  // boolean


  wire signed [15:0] cmd;  // int16
  wire debounce_out1;
  wire signed [15:0] clk_1;  // int16
  wire debounce1_out1;
  wire signed [15:0] sync;  // int16
  wire debounce2_out1;
  wire signed [15:0] cmd_1;  // int16
  wire debounce3_out1;
  wire signed [15:0] clk_2;  // int16
  wire debounce4_out1;
  wire signed [15:0] f8900_out1;  // int16
  wire debounce5_out1;
  wire signed [15:0] Constant_out1;  // int16
  wire signed [15:0] Sum_out1;  // int16

  // sync


  assign Constant_out1 = 16'sd2048;



  assign Sum_out1 = $signed({1'b0, adc_in}) - Constant_out1;



  f3475   u_f3475   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(cmd)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce   (.clk(clk),
                                              .reset(reset),
                                              .enb(clk_enable),
                                              .flt_in(cmd),  // int16
                                              .det_out(debounce_out1)
                                              );

  assign det_out_0 = debounce_out1;

  f5110   u_f5110   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(clk_1)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce1   (.clk(clk),
                                               .reset(reset),
                                               .enb(clk_enable),
                                               .flt_in(clk_1),  // int16
                                               .det_out(debounce1_out1)
                                               );

  assign det_out_1 = debounce1_out1;

  f7395   u_f7395   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(sync)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce2   (.clk(clk),
                                               .reset(reset),
                                               .enb(clk_enable),
                                               .flt_in(sync),  // int16
                                               .det_out(debounce2_out1)
                                               );

  assign det_out_2 = debounce2_out1;

  f4240   u_f4240   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(cmd_1)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce3   (.clk(clk),
                                               .reset(reset),
                                               .enb(clk_enable),
                                               .flt_in(cmd_1),  // int16
                                               .det_out(debounce3_out1)
                                               );

  assign det_out1_0 = debounce3_out1;

  f6205   u_f6205   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(clk_2)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce4   (.clk(clk),
                                               .reset(reset),
                                               .enb(clk_enable),
                                               .flt_in(clk_2),  // int16
                                               .det_out(debounce4_out1)
                                               );

  assign det_out1_1 = debounce4_out1;

  f8900   u_f8900   (.clk(clk),
                     .reset(reset),
                     .enb(clk_enable),
                     .Input_rsvd(Sum_out1),  // int16
                     .Output_rsvd(f8900_out1)  // int16
                     );

  comp_debounce_comp_debounce   u_debounce5   (.clk(clk),
                                               .reset(reset),
                                               .enb(clk_enable),
                                               .flt_in(f8900_out1),  // int16
                                               .det_out(debounce5_out1)
                                               );

  assign det_out1_2 = debounce5_out1;

  assign ce_out = clk_enable;

endmodule  // detect_tone

