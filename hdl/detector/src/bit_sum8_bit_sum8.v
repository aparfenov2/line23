// -------------------------------------------------------------
// 
// File Name: hdlsrc\root\bit_sum8\bit_sum8_bit_sum8.v
// Created: 2014-09-23 18:43:41
// 
// Generated by MATLAB 8.3 and HDL Coder 3.4
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: bit_sum8_bit_sum8
// Source Path: bit_sum8
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module bit_sum8_bit_sum8
          (
           In1,
           Out1
          );


  input   [7:0] In1;  // uint8
  output  [7:0] Out1;  // uint8


  wire [7:0] bitMask_for_Bitwise_Operator;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator1;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator2;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator3;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator4;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator5;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator6;  // uint8
  wire [7:0] bitMask_for_Bitwise_Operator7;  // uint8
  wire [7:0] Bitwise_Operator_out1;  // uint8
  wire Compare_To_Zero_cmpOut;
  wire [7:0] Compare_To_Zero_out1;  // uint8
  wire [7:0] Bitwise_Operator1_out1;  // uint8
  wire Compare_To_Zero1_cmpOut;
  wire [7:0] Compare_To_Zero1_out1;  // uint8
  wire [7:0] Bitwise_Operator2_out1;  // uint8
  wire Compare_To_Zero2_cmpOut;
  wire [7:0] Compare_To_Zero2_out1;  // uint8
  wire [7:0] Bitwise_Operator3_out1;  // uint8
  wire Compare_To_Zero3_cmpOut;
  wire [7:0] Compare_To_Zero3_out1;  // uint8
  wire [7:0] Bitwise_Operator4_out1;  // uint8
  wire Compare_To_Zero4_cmpOut;
  wire [7:0] Compare_To_Zero4_out1;  // uint8
  wire [7:0] Bitwise_Operator5_out1;  // uint8
  wire Compare_To_Zero5_cmpOut;
  wire [7:0] Compare_To_Zero5_out1;  // uint8
  wire [7:0] Bitwise_Operator6_out1;  // uint8
  wire Compare_To_Zero6_cmpOut;
  wire [7:0] Compare_To_Zero6_out1;  // uint8
  wire [7:0] Bitwise_Operator7_out1;  // uint8
  wire Compare_To_Zero7_cmpOut;
  wire [7:0] Compare_To_Zero7_out1;  // uint8
  wire [7:0] Sum_of_Elements_add_temp;  // ufix8
  wire [7:0] Sum_of_Elements_add_temp_1;  // ufix8
  wire [7:0] Sum_of_Elements_add_temp_2;  // ufix8
  wire [7:0] Sum_of_Elements_add_temp_3;  // ufix8
  wire [7:0] Sum_of_Elements_add_temp_4;  // ufix8
  wire [7:0] Sum_of_Elements_add_temp_5;  // ufix8
  wire [7:0] Sum_of_Elements_out1;  // uint8


  assign bitMask_for_Bitwise_Operator = 8'b00000001;



  assign bitMask_for_Bitwise_Operator1 = 8'b00000010;



  assign bitMask_for_Bitwise_Operator2 = 8'b00000100;



  assign bitMask_for_Bitwise_Operator3 = 8'b00001000;



  assign bitMask_for_Bitwise_Operator4 = 8'b00010000;



  assign bitMask_for_Bitwise_Operator5 = 8'b00100000;



  assign bitMask_for_Bitwise_Operator6 = 8'b01000000;



  assign bitMask_for_Bitwise_Operator7 = 8'b10000000;



  assign Bitwise_Operator_out1 = In1 & bitMask_for_Bitwise_Operator;



  assign Compare_To_Zero_cmpOut = (Bitwise_Operator_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero_out1 = {7'b0, Compare_To_Zero_cmpOut};



  assign Bitwise_Operator1_out1 = In1 & bitMask_for_Bitwise_Operator1;



  assign Compare_To_Zero1_cmpOut = (Bitwise_Operator1_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero1_out1 = {7'b0, Compare_To_Zero1_cmpOut};



  assign Bitwise_Operator2_out1 = In1 & bitMask_for_Bitwise_Operator2;



  assign Compare_To_Zero2_cmpOut = (Bitwise_Operator2_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero2_out1 = {7'b0, Compare_To_Zero2_cmpOut};



  assign Bitwise_Operator3_out1 = In1 & bitMask_for_Bitwise_Operator3;



  assign Compare_To_Zero3_cmpOut = (Bitwise_Operator3_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero3_out1 = {7'b0, Compare_To_Zero3_cmpOut};



  assign Bitwise_Operator4_out1 = In1 & bitMask_for_Bitwise_Operator4;



  assign Compare_To_Zero4_cmpOut = (Bitwise_Operator4_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero4_out1 = {7'b0, Compare_To_Zero4_cmpOut};



  assign Bitwise_Operator5_out1 = In1 & bitMask_for_Bitwise_Operator5;



  assign Compare_To_Zero5_cmpOut = (Bitwise_Operator5_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero5_out1 = {7'b0, Compare_To_Zero5_cmpOut};



  assign Bitwise_Operator6_out1 = In1 & bitMask_for_Bitwise_Operator6;



  assign Compare_To_Zero6_cmpOut = (Bitwise_Operator6_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero6_out1 = {7'b0, Compare_To_Zero6_cmpOut};



  assign Bitwise_Operator7_out1 = In1 & bitMask_for_Bitwise_Operator7;



  assign Compare_To_Zero7_cmpOut = (Bitwise_Operator7_out1 > 8'b00000000 ? 1'b1 :
              1'b0);



  assign Compare_To_Zero7_out1 = {7'b0, Compare_To_Zero7_cmpOut};



  assign Sum_of_Elements_add_temp = Compare_To_Zero_out1 + Compare_To_Zero1_out1;
  assign Sum_of_Elements_add_temp_1 = Sum_of_Elements_add_temp + Compare_To_Zero2_out1;
  assign Sum_of_Elements_add_temp_2 = Sum_of_Elements_add_temp_1 + Compare_To_Zero3_out1;
  assign Sum_of_Elements_add_temp_3 = Sum_of_Elements_add_temp_2 + Compare_To_Zero4_out1;
  assign Sum_of_Elements_add_temp_4 = Sum_of_Elements_add_temp_3 + Compare_To_Zero5_out1;
  assign Sum_of_Elements_add_temp_5 = Sum_of_Elements_add_temp_4 + Compare_To_Zero6_out1;
  assign Sum_of_Elements_out1 = Sum_of_Elements_add_temp_5 + Compare_To_Zero7_out1;



  assign Out1 = Sum_of_Elements_out1;

endmodule  // bit_sum8_bit_sum8

